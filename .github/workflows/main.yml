name: Django_pages

on:
  push:
    branches:
      - test

-jobs:
  deploy:
    runs-on: ubuntu
    strategy:
      matrix:
       python-version: [3.10]
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: "0"
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: Checkout_repo
      - uses: actions/checkout@4

      - name: Install_Python ${{ matrix.python-version }}
        uses: actions/steps/setup-python@v4
        with:
          # ${{ matrix.python-version }}
          python-version: 3.10
          pip-cache: true

      - name: Install_dependencies
        run: |-
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Collect static files
        run: |
          python manage.py collectstatic --no-input

      - name: Apply database migrations
        run: |-
          python manage.py migrate

      - name: Pre-commit_install
        run: |-
          pre-commit install

      - name: Run_pre-commit
        run: |-
          cat .pre-commit-config.yaml
          pre-commit run

      - name: Run-Pytest
        run: |-
          pytest __tests__/
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
#      - name: Run+Django_tests
#        run: |-
#          python manage.py test
          

#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#          with:
#            github_token: ${{ secrets.GITHUB_TOKEN }}
#            publish_dir: ./frontend/dist  # Укажите путь к собранным фронтенд файлам
