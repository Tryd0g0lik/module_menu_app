version: 1.1.{build}-{branch}

branches:
  only:
    - tests
image: Visual Studio 2019

environment:
  SECRET_KEY_DJ: django-insecure-u(z84ocgmtrt31cg5ce)#5%kl2=@1&2ahim*=gy^m=0p#fmg@@
  POSTGRES_DB: manuapp
  POSTGRES_PASSWORD: 123
  POSTGRES_USER: postgres
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  superuser: root
  superuser_password: 123

platform:
  - x64


stack: python >= 3.10
#  matrix: |-
#    TOXENV: py310
#    PY_PYTHON: 3.10
#    TOXENV: ruff


cache:
  - venv


install:
#   - cmd: py -m pip install tox
#   - pip
   #  - python -m pip install --upgrade pip setuptools wheel
  # Устанавливаем PostgreSQL
  - choco install postgresql14 --params='/Password:postgres' -y --no-progress
  - set PATH=D:\Program Files\PostgreSQL\14\bin;%PATH%
  - psql --version
  - timeout /t 30 /nobreak > nul & psql -c "CREATE DATABASE manuapp;"

  # Устанавливаем Python и зависимости
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python -m pip install --upgrade pip
  - pip install -r requirements.txt

  # Устанавливаем зависимости для фронтенда (если используется npm)
#  - cmd: npm install
#  - cmd: npm run build


build: off


before_build:
  - cmd: py manage.py migrate

after_build:
    # Собираем статику
    - cmd: python manage.py collectstatic --noinput



deploy_script:
  - git config --global credential.helper store #включает кеширование учетных данных
  - git config --global user.name Tryd0g0lik
  - git config --global user.email work80@mail.ru
  - ps: Write-Host "https://$GITHUB_TOKEN:x-oauth-basic@github.com" > "$HOME/.git-credentials" -NoNewline

#  - npm install push-dir -W --dir=dist --branch=tests
